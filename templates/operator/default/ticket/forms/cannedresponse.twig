{% extends parent_template %}

{% block sidebar %}
    {% include 'operator.' ~ template ~ '.sidebar-settings' %}
{% endblock %}

{% block title %}
    {% if record|default is not empty and record.exists %}
        {{ Lang.get('general.edit_item', {'item': Lang.choice('ticket.cannedresponse', 1)}) }}
    {% else %}
        {{ Lang.get('general.add_item', {'item': Lang.choice('ticket.cannedresponse', 1)}) }}
    {% endif %}
{% endblock %}

{% block content %}

    {% if record|default is not empty and record.exists %}
        {{ form_model(record, { 'route': [ 'ticket.operator.cannedresponse.update', record.id ], 'method': 'PUT', 'class': 'validate' }) }}
    {% else %}
        {{ form_open({ 'route': 'ticket.operator.cannedresponse.store', 'class': 'validate' }) }}
    {% endif %}

        <div id="sectionWrapper">

            <h2>{{ Lang.choice('ticket.response', 2) }}</h2>
            <h2 class="description">{{ Lang.get('ticket.response_desc') }}</h2>
            
            {# Required by multidimensionaldata.js #}
            <div class="tabContent">

                {# Hidden option for multidimensionaldata.js #}
                {% include 'operator.' ~ template ~ '.ticket.forms.cannedresponse_translation' with { 'hide': true } %}
        
                <div class="section-items">
                    {# Default response #}
                    <div class="form-container first open">
                        {%
                            include 'operator.' ~ template ~ '.ticket.forms.cannedresponse_rows'
                            with {
                                'elements': {
                                    'name': { 'name': 'name', 'value': record.getOriginal('name') },
                                    'text': { 'name': 'text', 'value': record.getOriginal('text') }
                                }
                            }
                        %}
                    </div>

                    {# Existing Translations #}
                    {% for translation in translations %}
                        {% include 'operator.' ~ template ~ '.ticket.forms.cannedresponse_translation' %}
                    {% endfor %}
                </div>
        
                <div class="form-container open {% if not availableLanguages|length %}hide{% endif %}">
                    <div class="form-row small-selectize">
                        <div class="input-container">
                            <select name="languages" title="{{ Lang.get('core.add_another_language') }}" class="add-item-selectize">
                                <option></option>
                                {% for code, name in availableLanguages %}
                                    <option value="{{ code }}">{{ name }}</option>
                                {% endfor %}
                            </select>
                        </div>
                    </div>
                </div>

            </div>

        </div>

        <h2>{{ Lang.get('customfield.options') }}</h2>

        <div class="form-container first open">
    
            <div class="form-row">
                {{ form_label('select', Lang.choice('ticket.tag', 2)) }}
                <div class="input-container">
                    <select name="tag[]" multiple="multiple">
                        {% for tag in tags %}
                            <option {% if record|default is not empty and record.tags.contains('id', tag.id) %}selected="selected"{% endif %} value='{{ tag.original_name }}'>
                                {{ tag.name }}
                            </option>
                        {% endfor %}
                    </select>
                    <span class="description">{{ Lang.get('ticket.canned_response_tags_desc') }}</span>
                </div>
            </div>

            <div class="form-row">
                {{ form_label('public', Lang.get('general.public')) }}
                <div class="input-container">
                    {{ form_check('public', 1, record.user_id|default is empty, { 'class': 'toggle', 'id': 'toggle_public' }) }}
                    <label for="toggle_public"></label>
                    <br />
                    <span class="description">{{ Lang.get('ticket.canned_public_desc') }}</span>
                </div>
            </div>

            <div class="form-row form-full usergroups">
                {{ form_label('groups', Lang.choice('user.operator_group', 2)) }}
                <div class="input-container">
                    {{ form_select('groups[]', groups, userGroups, { 'multiple': 'multiple' }) }}
                    <span class="description">{{ Lang.get('ticket.canned_group_desc') }}</span>
                </div>
            </div>

        </div>

        <div class="form-button">
            {{ form_submit(Lang.choice('general.submit', 1)) }}
        </div>

    {{ form_close() }}

{% endblock %}

{% block scripts_footer %}
    {% if jsValidator|default is not empty %}
        {{ jsValidator|raw }}
    {% endif %}

    <!-- Selectize -->
    <link href="{{ asset_rev('resources/assets/libs/selectize/css/selectize.css') }}" rel="stylesheet" />
    <script src="{{ asset_rev('resources/assets/libs/selectize/js/selectize.min.js') }}"></script>
    <script src="{{ asset_rev('resources/assets/operator/js/selectize/no_results.js') }}"></script>

    <!-- Redactor -->
    <script src="{{ asset_rev('resources/assets/libs/redactor/js/redactor.min.js') }}"></script>
    <script src="{{ asset_rev('resources/assets/general/js/redactor_config.js') }}"></script>
    <link rel="stylesheet" type="text/css" href="{{ asset_rev('resources/assets/libs/redactor/css/redactor.css') }}">
    <script src="{{ asset_rev('resources/assets/libs/redactor/js/plugins.min.js') }}"></script>

    <!-- Code Editor -->
    <script src="{{ asset_rev('resources/assets/libs/codemirror/js/codemirror.min.js') }}"></script>
    <link rel="stylesheet" href="{{ asset_rev('resources/assets/libs/codemirror/css/codemirror.css') }}">
    <script src="{{ asset_rev('resources/assets/libs/sweetalert2/js/sweetalert2.min.js') }}"></script>
    <link rel="stylesheet" type="text/css" href="{{ asset_rev('resources/assets/libs/sweetalert2/css/sweetalert2.css') }}">
    <link rel="stylesheet" type="text/css" href="{{ asset_rev('resources/assets/operator/css/codeeditor.css') }}" />
    <script type="text/javascript" src="{{ asset_rev('resources/assets/operator/js/redactor/codeeditor.js') }}"></script>

    <script src="{{ asset_rev('resources/assets/operator/js/redactor/mergefields.js') }}"></script>
    <script src="{{ asset_rev('resources/assets/operator/js/multidimensionaldata.js') }}"></script>
    <script type="text/javascript">
        // List of valid translatable attributes.
        var translatableAttributes = {{ translatableAttributes|json_encode|raw }};
        
        // Redactor options.
        var opts = {
            mergeFields: {
                tickets: true,
                organisations: '{{ Config.get('settings.organisations_enabled') }}'
            },
            plugins: ['syntax', 'imagemanager', 'table', 'video', 'fontcolor', 'fontfamily', 'fontsize', 'mergeFields']
        };
        
        // Custom attribute mapper for multidimensionaldata.js
        attributeMapper = function(elem, value, attribute) {
            var attr = elem.attr(attribute);
            if (typeof attr !== 'undefined')
                elem.attr(attribute, translatableAttributes[value][attr.replace(':default', '')]);
        };
        
        $(document).ready(function() {
            // Focus the canned response name input box.
            $('input[name="name"]').focus();

            var $select = $('select[name="groups[]"]').selectize({
                delimiter: ',',
                persist: false,
                dropdownParent: 'body'
            })[0].selectize;
            $('div.section-items textarea').redactor($.extend($.Redactor.default_opts, opts));

            // Tags
            $('select[name="tag[]"]').selectize({
                plugins: ['remove_button'],
                valueField: 'original_name',
                labelField: 'name',
                searchField: 'name',
                create: true,
                createFilter: function(input) {
                    return input.length <= 45;
                },
                maxItems: null,
                placeholder: Lang.get("ticket.associate_response_tag")
            });

            // On page load, toggle the user groups box depending on whether public is set/not
            var $public = $('input[name="public"]');
            $('.usergroups').toggle($public.is(":checked"));

            // Toggle user groups, as we update the checkbox
            $public.change(function() {
                if (this.checked) {
                    $('.usergroups').show();
                    $('select[name="groups[]"]').prop("disabled", false);
                    $select.enable();
                } else {
                    $('.usergroups').hide();
                    $('select[name="groups[]"]').prop("disabled", true);
                    $select.clear();
                    $select.disable();
                }
            });
        });
    </script>
{% endblock %}